input * xkb_layout "gb"

set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font pango:Source Code Pro 12
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty fish
bindsym $mod+Shift+Return exec kitty zsh

bindsym $mod+Mod1+Return exec nautilus
bindsym $mod+Mod1+Delete exec nautilus

bindsym $mod+BackSpace exec firefox --browser
bindsym $mod+Shift+BackSpace exec chromium-browser

bindsym $mod+n workspace next
bindsym $mod+Shift+n workspace prev

bindsym $mod+b workspace back_and_forth

# kill focused window
bindsym $mod+q kill

bindsym $mod+d exec rofi -show combi
bindsym $mod+Shift+d exec rofi -show run

# locking
bindsym $mod+l exec --no-startup-id swaylock -c aaaaaa

# Change focus with the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move window with the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# switch to workspace
# Page up to chat, page down to media
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspa
# Page up to chat, page down to media
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

bindsym $mod+Shift+r reload
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+o move workspace to output left
bindsym $mod+p move workspace to output right

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume 0 50%
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume 0 150%
bindsym XF86AudioLowerVolume exec amixer -q set Master 5%- unmute
bindsym XF86AudioMute exec amixer -q set Master toggle
bindsym XF86AudioRaiseVolume exec amixer -q set Master 5%+ unmute
bindsym XF86MonBrightnessDown exec light -l -U 10
bindsym XF86MonBrightnessUp exec light -l -A 10

focus_follows_mouse no

for_window [title="Execute program feat"]  floating enable
for_window [title="Copying"]               floating enable
for_window [title="Moving"]                floating enable
for_window [class="Gnome-calculator"] floating enable, move position 200 px 200 px, exec xdotool search --class Gnome-calculator getwindowpid -- windowsize %@ 500 500


exec_always nm-applet
exec_always 1password --silent
exec_always blueman-applet
exec_always kanshi
exec_always mako
exec_always wlsunset

exec_always swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"'

set $inner 5
set $outer 5
set $total 10

# SET GAPS
gaps inner $inner
gaps outer $outer

bindsym $mod+z gaps inner all set $inner; gaps outer all set $outer
bindsym $mod+Shift+z  gaps inner all set 0; gaps outer all set 0
bindsym $mod+x gaps inner current set 0; gaps outer current set 0; gaps top current set $total;

smart_gaps on
smart_gaps inverse_outer
smart_borders on

bar {
    position top
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}
