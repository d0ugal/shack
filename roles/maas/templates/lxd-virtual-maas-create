#!/bin/bash -e

DEFAULT_IMAGE="bionic"
LXD_KVM_PROFILE="kvm"
LXD_INSTANCE_NAME="$DEFAULT_IMAGE-maas-kvm"
MAAS_SNAP_DEFAULT="--channel=latest/edge maas"

USERNAME="testing"
PASSWORD="testing"


verify_instance_doesnt_exist(){
    if lxc info "$LXD_INSTANCE_NAME" >/dev/null 2>&1; then
	cat << EOF
The LXC instance $LXD_INSTANCE_NAME already exists.

If you want to recreate it run the following command and restart this script;

    lxc delete $LXD_INSTANCE_NAME --force
EOF
        exit 1
    fi
}

ensure_profile() {
    if ! lxc profile show "$LXD_KVM_PROFILE" >/dev/null 2>&1; then
        lxc profile create "$LXD_KVM_PROFILE"
    fi

    local uid
    uid=$(id -u "$USER")

    cat <<EOF | lxc profile edit "$LXD_KVM_PROFILE"
config:
  user.user-data: |
    #cloud-config
    package_upgrade: true
    packages: [libvirt-bin, qemu-kvm, cpu-checker, libvirt-clients, jq]
    runcmd:
     - cat /dev/zero | ssh-keygen -q -N ""
     - cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
     - touch /tmp/startup-complete
description: Provide access to /dev/kvm in the container, for hardware accelleration
devices:
  kvm:
    gid: "1001"
    major: "10"
    minor: "232"
    path: /dev/kvm
    type: unix-char
name: kvm
used_by: []
EOF
}

create_instance(){
    lxc launch ubuntu:$DEFAULT_IMAGE $LXD_INSTANCE_NAME -p default -p $LXD_KVM_PROFILE
    lxc exec $LXD_INSTANCE_NAME -- /bin/bash -c 'while ! [ -f /tmp/startup-complete ]; do sleep 0.5; done'

}

create_maas_network(){

    network_def=$(mktemp /tmp/maas.xml.XXXXXX)

    cat << EOF > $network_def
<network>
  <name>maas</name>
  <forward mode="nat"/>
  <bridge name="maas" stp="off" delay="0"/>
  <ip address="172.16.99.1" netmask="255.255.255.0"/>
</network>
EOF

    lxc file push $network_def $LXD_INSTANCE_NAME/tmp/maas.xml;
    rm "$network_def";
    lxc exec $LXD_INSTANCE_NAME -- virsh net-define /tmp/maas.xml;
    lxc exec $LXD_INSTANCE_NAME -- virsh net-start maas;
    lxc exec $LXD_INSTANCE_NAME -- virsh net-autostart maas;
}

install_maas_snap(){
   lxc exec $LXD_INSTANCE_NAME -- snap install $MAAS_SNAP_DEFAULT 
   lxc exec $LXD_INSTANCE_NAME -- /snap/maas/current/helpers/maas-database-setup
   lxc exec $LXD_INSTANCE_NAME -- maas createadmin --username $USERNAME --password $PASSWORD --email testing@example.com
}

copy_ssh_keys(){
   lxc exec $LXD_INSTANCE_NAME -- cp -r /root/.ssh/ /var/snap/maas/current/root/.ssh
}

cli_login(){
   API_KEY=$(lxc exec $LXD_INSTANCE_NAME -- maas apikey --username $USERNAME)
   IP=$(lxc exec bionic-maas-kvm -- ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
   URL="http://$IP:5240/MAAS/"

   lxc exec $LXD_INSTANCE_NAME -- maas login virt $URL $API_KEY
}

enable_dhcp(){
   fabric_id=$(lxc exec $LXD_INSTANCE_NAME -- sh -c 'maas virt subnet read 172.16.99.0/24 | jq .vlan.fabric -r')
   lxc exec $LXD_INSTANCE_NAME -- maas virt ipranges create type=dynamic start_ip=172.16.99.190 end_ip=172.16.99.253 comment="Dynamic"
   lxc exec $LXD_INSTANCE_NAME -- maas virt vlan update $fabric_id 0 dhcp_on=True primary_rack=bionic-maas-kvm
}

add_kvm_pod(){
   lxc exec $LXD_INSTANCE_NAME -- maas virt pods create type=virsh power_address=qemu+ssh://root@127.0.0.1/system
}

finish(){

xdg-open $URL

   cat << EOF
A Virtual MAAS Setup is now ready.

The username and password are both "testing"
EOF

}

verify_instance_doesnt_exist
ensure_profile
create_instance
create_maas_network
install_maas_snap
copy_ssh_keys
cli_login
enable_dhcp
add_kvm_pod
finish
